# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.41.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "assembleRelease")
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc “Submit a new Degub Build to Applivery”
  lane :appliveryDebug do |options|
    gradle(task: "clean")
    gradle(task: "test")
    gradle(
      task: "assemble",
      build_type: "Debug"
    )

    applivery(
      app_id: "59541a5d22ea18594cb88fe6",            # Your Applivery App Id
      api_key: "cf1e400255db7adf254f9428c7622a9d5b638f21",          # Your Applivery API Key
      #name: "YOUR_BUILD_NAME",         # OPTIONAL: A human-readable name for your build
      #notify: false,                   # OPTIONAL: by default it's set to true
      #notes: "Uploaded with fastlane", # OPTIONAL: A human-readable release notes
      #tags: "fastlane",                # OPTIONAL: Your build tags
      #autoremove: true,                # OPTIONAL: Remove the last build if you did exced the limits. By default it's set to true
      #build_path: "YOUR_APP.ipa"       # OPTIONAL: by default it takes the IPA build path generated by gym
    )
  end

  desc "Changue version of application - user version:[major|minor|fixed] for versioning"
    lane :incrementVersion do |options|

      if(options[:version]=='minor')
        gradle(task: "doMinorVersionIncrement")
      elsif (options[:version]=='major')
        gradle(task: "doMajorVersionIncrement")
      else
        gradle(task: "doFixedVersionIncrement")
      end

      #appliveryDebug
    end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )

  hipchat(
    api_token: "OSHmzaYK788Sqy2fX72310jvu1BclVzenFf1IP6G",
    version: "2",
    channel: "FastLane%20Testing",
    message: "Successfully deployed new App Update."
  )

  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )

  hipchat(
    api_token: "OSHmzaYK788Sqy2fX72310jvu1BclVzenFf1IP6G",
    version: "2",
    channel: "FastLane%20Testing",
    message: exception.message
  )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
