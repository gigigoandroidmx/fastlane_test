apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    signingConfigs {
        release {
            def Properties props = new Properties()
            def propFile = new File('./signing.properties')
            if (propFile.canRead()) {
                props.load(new FileInputStream(propFile))

                if (props != null &&
                        props.containsKey('STORE_FILE') &&
                        props.containsKey('STORE_PASSWORD') &&
                        props.containsKey('KEY_ALIAS') &&
                        props.containsKey('KEY_PASSWORD')) {
                    android.signingConfigs.release.storeFile = file(props.getProperty('STORE_FILE'))
                    android.signingConfigs.release.storePassword = props.getProperty('STORE_PASSWORD')
                    android.signingConfigs.release.keyAlias = props.getProperty('KEY_ALIAS')
                    android.signingConfigs.release.keyPassword = props.getProperty('KEY_PASSWORD')
                } else {
                    println 'signing.properties found but some entries are missing'
                    android.buildTypes.release.signingConfig = null
                }
            } else {
                println 'signing.properties not found'
                android.buildTypes.release.signingConfig = null
            }
        }
    }

    defaultConfig {
        applicationId "com.lovedone.inapppurchase"
        minSdkVersion 19
        targetSdkVersion 21
        versionCode rootProject.ext.readBuildCode()
        versionName rootProject.ext.readVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    task doMajorVersionIncrement << {
        println "Incrementing major version..."
        rootProject.ext.incrementVersionNumber('major')
    }

    task doMinorVersionIncrement << {
        println "Incrementing minor version..."
        rootProject.ext.incrementVersionNumber('minor')
    }

    task doFixedVersionIncrement << {
        println "Incrementing fixed version..."
        rootProject.ext.incrementVersionNumber('fixed')
    }

    task doBuildNumberIncrement << {
        println "Incrementing build number ..."
        rootProject.ext.incrementBuildNumber()
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}
